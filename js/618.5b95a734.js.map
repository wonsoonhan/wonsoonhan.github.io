{"version":3,"file":"js/618.5b95a734.js","mappings":"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","sources":["webpack://test/./node_modules/vuetify/lib/components/VSwitch/VSwitch.js","webpack://test/./node_modules/vuetify/lib/mixins/rippleable/index.js","webpack://test/./node_modules/vuetify/lib/mixins/selectable/index.js"],"sourcesContent":["// Styles\nimport \"../../../src/styles/components/_selection-controls.sass\";\nimport \"../../../src/components/VSwitch/VSwitch.sass\"; // Mixins\n\nimport Selectable from '../../mixins/selectable';\nimport VInput from '../VInput'; // Directives\n\nimport Touch from '../../directives/touch'; // Components\n\nimport { VFabTransition } from '../transitions';\nimport VProgressCircular from '../VProgressCircular/VProgressCircular'; // Helpers\n\nimport { keyCodes } from '../../util/helpers';\n/* @vue/component */\n\nexport default Selectable.extend({\n  name: 'v-switch',\n  directives: {\n    Touch\n  },\n  props: {\n    inset: Boolean,\n    loading: {\n      type: [Boolean, String],\n      default: false\n    },\n    flat: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    classes() {\n      return { ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls v-input--switch': true,\n        'v-input--switch--flat': this.flat,\n        'v-input--switch--inset': this.inset\n      };\n    },\n\n    attrs() {\n      return {\n        'aria-checked': String(this.isActive),\n        'aria-disabled': String(this.isDisabled),\n        role: 'switch'\n      };\n    },\n\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState() {\n      if (this.hasError && this.shouldValidate) return 'error';\n      if (this.hasSuccess) return 'success';\n      if (this.hasColor !== null) return this.computedColor;\n      return undefined;\n    },\n\n    switchData() {\n      return this.setTextColor(this.loading ? undefined : this.validationState, {\n        class: this.themeClasses\n      });\n    }\n\n  },\n  methods: {\n    genDefaultSlot() {\n      return [this.genSwitch(), this.genLabel()];\n    },\n\n    genSwitch() {\n      const {\n        title,\n        ...switchAttrs\n      } = this.attrs$;\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input'\n      }, [this.genInput('checkbox', { ...this.attrs,\n        ...switchAttrs\n      }), this.genRipple(this.setTextColor(this.validationState, {\n        directives: [{\n          name: 'touch',\n          value: {\n            left: this.onSwipeLeft,\n            right: this.onSwipeRight\n          }\n        }]\n      })), this.$createElement('div', {\n        staticClass: 'v-input--switch__track',\n        ...this.switchData\n      }), this.$createElement('div', {\n        staticClass: 'v-input--switch__thumb',\n        ...this.switchData\n      }, [this.genProgress()])]);\n    },\n\n    genProgress() {\n      return this.$createElement(VFabTransition, {}, [this.loading === false ? null : this.$slots.progress || this.$createElement(VProgressCircular, {\n        props: {\n          color: this.loading === true || this.loading === '' ? this.color || 'primary' : this.loading,\n          size: 16,\n          width: 2,\n          indeterminate: true\n        }\n      })]);\n    },\n\n    onSwipeLeft() {\n      if (this.isActive) this.onChange();\n    },\n\n    onSwipeRight() {\n      if (!this.isActive) this.onChange();\n    },\n\n    onKeydown(e) {\n      if (e.keyCode === keyCodes.left && this.isActive || e.keyCode === keyCodes.right && !this.isActive) this.onChange();\n    }\n\n  }\n});\n//# sourceMappingURL=VSwitch.js.map","// Directives\nimport ripple from '../../directives/ripple'; // Types\n\nimport Vue from 'vue';\nexport default Vue.extend({\n  name: 'rippleable',\n  directives: {\n    ripple\n  },\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true\n    }\n  },\n  methods: {\n    genRipple(data = {}) {\n      if (!this.ripple) return null;\n      data.staticClass = 'v-input--selection-controls__ripple';\n      data.directives = data.directives || [];\n      data.directives.push({\n        name: 'ripple',\n        value: {\n          center: true\n        }\n      });\n      return this.$createElement('div', data);\n    }\n\n  }\n});\n//# sourceMappingURL=index.js.map","// Components\nimport VInput from '../../components/VInput'; // Mixins\n\nimport Rippleable from '../rippleable';\nimport Comparable from '../comparable'; // Utilities\n\nimport mixins from '../../util/mixins';\nexport function prevent(e) {\n  e.preventDefault();\n}\n/* @vue/component */\n\nexport default mixins(VInput, Rippleable, Comparable).extend({\n  name: 'selectable',\n  model: {\n    prop: 'inputValue',\n    event: 'change'\n  },\n  props: {\n    id: String,\n    inputValue: null,\n    falseValue: null,\n    trueValue: null,\n    multiple: {\n      type: Boolean,\n      default: null\n    },\n    label: String\n  },\n\n  data() {\n    return {\n      hasColor: this.inputValue,\n      lazyValue: this.inputValue\n    };\n  },\n\n  computed: {\n    computedColor() {\n      if (!this.isActive) return undefined;\n      if (this.color) return this.color;\n      if (this.isDark && !this.appIsDark) return 'white';\n      return 'primary';\n    },\n\n    isMultiple() {\n      return this.multiple === true || this.multiple === null && Array.isArray(this.internalValue);\n    },\n\n    isActive() {\n      const value = this.value;\n      const input = this.internalValue;\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) return false;\n        return input.some(item => this.valueComparator(item, value));\n      }\n\n      if (this.trueValue === undefined || this.falseValue === undefined) {\n        return value ? this.valueComparator(value, input) : Boolean(input);\n      }\n\n      return this.valueComparator(input, this.trueValue);\n    },\n\n    isDirty() {\n      return this.isActive;\n    },\n\n    rippleState() {\n      return !this.isDisabled && !this.validationState ? undefined : this.validationState;\n    }\n\n  },\n  watch: {\n    inputValue(val) {\n      this.lazyValue = val;\n      this.hasColor = val;\n    }\n\n  },\n  methods: {\n    genLabel() {\n      const label = VInput.options.methods.genLabel.call(this);\n      if (!label) return label;\n      label.data.on = {\n        // Label shouldn't cause the input to focus\n        click: prevent\n      };\n      return label;\n    },\n\n    genInput(type, attrs) {\n      return this.$createElement('input', {\n        attrs: Object.assign({\n          'aria-checked': this.isActive.toString(),\n          disabled: this.isDisabled,\n          id: this.computedId,\n          role: type,\n          type\n        }, attrs),\n        domProps: {\n          value: this.value,\n          checked: this.isActive\n        },\n        on: {\n          blur: this.onBlur,\n          change: this.onChange,\n          focus: this.onFocus,\n          keydown: this.onKeydown,\n          click: prevent\n        },\n        ref: 'input'\n      });\n    },\n\n    onBlur() {\n      this.isFocused = false;\n    },\n\n    onClick(e) {\n      this.onChange();\n      this.$emit('click', e);\n    },\n\n    onChange() {\n      if (!this.isInteractive) return;\n      const value = this.value;\n      let input = this.internalValue;\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) {\n          input = [];\n        }\n\n        const length = input.length;\n        input = input.filter(item => !this.valueComparator(item, value));\n\n        if (input.length === length) {\n          input.push(value);\n        }\n      } else if (this.trueValue !== undefined && this.falseValue !== undefined) {\n        input = this.valueComparator(input, this.trueValue) ? this.falseValue : this.trueValue;\n      } else if (value) {\n        input = this.valueComparator(input, value) ? null : value;\n      } else {\n        input = !input;\n      }\n\n      this.validate(true, input);\n      this.internalValue = input;\n      this.hasColor = input;\n    },\n\n    onFocus() {\n      this.isFocused = true;\n    },\n\n    /** @abstract */\n    onKeydown(e) {}\n\n  }\n});\n//# sourceMappingURL=index.js.map"],"names":["name","directives","Touch","props","inset","Boolean","loading","type","String","default","flat","computed","classes","VInput","this","attrs","isActive","isDisabled","role","validationState","hasError","shouldValidate","hasSuccess","hasColor","computedColor","switchData","setTextColor","undefined","class","themeClasses","methods","genDefaultSlot","genSwitch","genLabel","title","switchAttrs","attrs$","$createElement","staticClass","genInput","genRipple","value","left","onSwipeLeft","right","onSwipeRight","genProgress","$slots","progress","VProgressCircular","color","size","width","indeterminate","onChange","onKeydown","e","keyCode","ripple","Object","data","push","center","prevent","preventDefault","extend","model","prop","event","id","inputValue","falseValue","trueValue","multiple","label","lazyValue","isDark","appIsDark","isMultiple","Array","isArray","internalValue","input","some","item","valueComparator","isDirty","rippleState","watch","val","on","click","assign","toString","disabled","computedId","domProps","checked","blur","onBlur","change","focus","onFocus","keydown","ref","isFocused","onClick","$emit","isInteractive","length","filter","validate"],"sourceRoot":""}